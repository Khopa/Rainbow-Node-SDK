{
    "describe": "Groups API", 
    "starring": {
        "admin": {
            "robert": {
                "email": "rford@westworld.com",
                "password": "Password_123"
            }
        },
        "actors": {
            "dolores": {
                "email": "dabernathy@host-westworld.com",
                "firstname": "Dolores",
                "lastname": "Abernathy",
                "company": "Westworld Host",
                "password": "Password_123"
            },
            "maeve": {
                "email": "mmillay@host-westworld.com",
                "firstname": "Maeve",
                "lastname": "Millay",
                "company": "Westworld Host",
                "password": "Password_123"
            }
        }
    },
    "runBeforeAll": {
        "it": {
            "should": "Log-in with Maeve and Dolores successfully and delete all existing groups",
            "by": [
                {
                    "executing": "api:connection.signin", 
                    "injecting": ["usr:@.email", "usr:@.password"], 
                    "resulting": "account", 
                    "expecting": [{"var:account": "$defined"}],
                    "using": ["maeve", "dolores"]
                },
                {
                    "executing": "api:groups.deleteAllGroups", 
                    "injecting": [], 
                    "resulting": "", 
                    "expecting": [],
                    "using": ["maeve", "dolores"]
                }
            ]
        }
    },  
    "runAfterAll": {
        "it": {
            "should": "Log-out with Maeve and Dolores successfully",
            "by": [
                {
                    "executing": "api:connection.signout", 
                    "injecting": [], 
                    "resulting": null, 
                    "expecting": [],
                    "using": ["maeve", "dolores"]
                }
            ]
        }
    },
    "run": [
        {
             "it": {
                "should": "Check that Maeve and Dolores have no groups (owned or not)",
                "by": [
                    {
                        "executing": "api:groups.getGroups", 
                        "injecting": [], 
                        "resulting": "myGroups", 
                        "expecting": [{"var:myGroups.length": 0}],
                        "using": ["maeve", "dolores"]
                    }
                ]
            }
        },
        {
             "it": {
                "should": "Create a group with Maeve, check that the group is well created and then delete it",
                "by": [
                    {
                        "executing": "api:groups.createGroup", 
                        "injecting": ["A Group", "A description", false], 
                        "resulting": "group", 
                        "expecting": [{"var:group": "$anObject"}, {"var:group.id": "$defined"}, {"var:group.name": "A Group"}, {"var:group.comment": "A description"}, {"var:group.isFavorite": false}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.getGroups", 
                        "injecting": [], 
                        "resulting": "myGroups", 
                        "expecting": [{"var:myGroups.length": 1}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.deleteGroup", 
                        "injecting": ["var:group"], 
                        "resulting": null, 
                        "expecting": [],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.getGroups", 
                        "injecting": [], 
                        "resulting": "myGroups", 
                        "expecting": [{"var:myGroups.length": 0}],
                        "using": ["maeve"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Create a contact group with Maeve, add Dolores, and delete it",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:dolores.email"], 
                        "resulting": "contactDolores", 
                        "expecting": [{"var:contactDolores": "$anObject"}, {"var:contactDolores.id": "$defined"}, {"var:contactDolores.loginEmail": "#dabernathy@host-westworld.com"}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.createGroup", 
                        "injecting": ["A Group", "A group with Dolores", false], 
                        "resulting": "groupWithDolores", 
                        "expecting": [{"var:groupWithDolores": "$anObject"}, {"var:groupWithDolores.id": "$defined"}, {"var:groupWithDolores.name": "A Group"}, {"var:groupWithDolores.comment": "A group with Dolores"}, {"var:groupWithDolores.isFavorite": false}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.addContactInGroup", 
                        "injecting": ["var:contactDolores", "var:groupWithDolores"], 
                        "waiting": {
                            "forEvent": "api:groups.RAINBOW_ONGROUPUSERADDED",
                            "resulting": "addUserGroupId",
                            "using": ["maeve"]
                        },
                        "resulting": "updatedGroupId", 
                        "expecting": [{"var:updatedGroupId": "$defined"}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.getGroupById", 
                        "injecting": ["var:updatedGroupId"], 
                        "resulting": "groupToTest", 
                        "expecting": [{"var:groupToTest.users": "$anArray"}, {"var:groupToTest.users[0].loginEmail": "#dabernathy@host-westworld.com"}, {"var:groupToTest.users.length": 1}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.removeContactFromGroup", 
                        "injecting": ["var:contactDolores", "var:groupWithDolores"], 
                        "waiting": {
                            "forEvent": "api:groups.RAINBOW_ONGROUPUSERREMOVED",
                            "resulting": "addUserGroupId",
                            "using": ["maeve"]
                        },
                        "resulting": "groupNoContactId", 
                        "expecting": [],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:groups.getGroupById", 
                        "injecting": ["var:groupNoContactId"], 
                        "resulting": "groupToTest", 
                        "expecting": [{"var:groupToTest.users.length": 0}],
                        "using": ["maeve"]
                    },

                    {
                        "executing": "api:groups.deleteGroup", 
                        "injecting": ["var:groupWithDolores"], 
                        "resulting": null, 
                        "expecting": [],
                        "using": ["maeve"]
                    }
                ]
            }
        }
    ]
}