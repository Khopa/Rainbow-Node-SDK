{
    "describe": "Contacts API", 
    "starring": {
        "admin": {
            "robert": {
                "email": "rford@westworld.com",
                "password": "Password_123"
            }
        },
        "actors": {
            "theresa": {
                "email": "tcullen@guestwestworld.com",
                "firstname": "Theresa",
                "lastname": "Cullen",
                "company": "WestworldGuest",
                "password": "Password_123"
            },
            "bernard": {
                "email": "blowe@hostwestworld.com",
                "firstname": "Bernard",
                "lastname": "Lowe",
                "company": "WestworldHost",
                "password": "Password_123"
            },
            "maeve": {
                "email": "maevee@hostwestworld.com",
                "firstname": "Maeve",
                "lastname": "Millay",
                "company": "WestworldHost",
                "password": "Password_123"
            }
        },
        "relations": [
            {
                "isCompanyVisibleBy": {
                    "WestworldHost": "WestworldGuest"
                }
            },
            {
                "isActorInRelationWith": {
                    "maevee@hostwestworld.com": "blowe@hostwestworld.com"
                }
            }
        ]
    },
    "runBeforeAll": {
        "it": {
            "should": "Log-in with Theresa, Maeve and Bernard successfully",
            "by": [
                {
                    "executing": "api:connection.signin", 
                    "injecting": ["usr:@.email", "usr:@.password"], 
                    "resulting": "account", 
                    "expecting": [{"var:account": "$defined"}],
                    "using": ["theresa", "maeve", "bernard"]
                }
            ]
        }
    },   
    "runAfterAll": {
        "it": {
            "should": "Log-out with Theresa, Maeve and Bernard successfully",
            "by": [
                {
                    "executing": "api:connection.signout", 
                    "injecting": [], 
                    "resulting": null, 
                    "expecting": [],
                    "using": ["theresa", "maeve", "bernard"]
                }
            ]
        }
    },
    "run": [
        {
             "it": {
                "should": "Count that Theresa, Maeve and Bernard have the right number of contacts",
                "by": [
                    {
                        "executing": "api:contacts.getAll", 
                        "injecting": [], 
                        "resulting": "contacts", 
                        "expecting": [{"var:contacts.length": 0}],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.getAll", 
                        "injecting": [], 
                        "resulting": "contacts", 
                        "expecting": [{"var:contacts.length": 1}],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.getAll", 
                        "injecting": [], 
                        "resulting": "contacts", 
                        "expecting": [{"var:contacts.length": 1}],
                        "using": ["maeve"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Retrieve the information of Theresa when she logs-in",
                "by": [
                    {
                        "executing": "api:contacts.getConnectedUser", 
                        "injecting": [""], 
                        "resulting": "theresaContact", 
                        "expecting": [{"var:theresaContact": "$defined"}, {"var:theresaContact.loginEmail": "#tcullen@guestwestworld.com"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Retrieve the phone information of Theresa when she logs-in and it should be null as Theresa has no phone information",
                "by": [
                    {
                        "executing": "api:contacts.getConnectedUserPhone", 
                        "injecting": [""], 
                        "resulting": "theresaContact", 
                        "expecting": [{"var:theresaContact": "$notDefined"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Allow Bernard to access to the information of Maeve using her jid",
                "by": [
                    {
                        "executing": "api:contacts.getAll", 
                        "injecting": [], 
                        "resulting": "contacts", 
                        "expecting": [{"var:contacts[0].loginEmail": "#maevee@hostwestworld.com"}],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.getContactByJID", 
                        "injecting": ["var:contacts[0].jid"], 
                        "resulting": "maeveContact", 
                        "expecting": [{"var:maeveContact": "$defined"}, {"var:maeveContact.loginEmail": "#maevee@hostwestworld.com"}],
                        "using": ["bernard"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Allow Theresa to find Bernard using his login email",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:bernard.email"], 
                        "resulting": "bernardContact", 
                        "expecting": [{"var:bernardContact": "$defined"}, {"var:bernardContact.loginEmail": "#blowe@hostwestworld.com"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Allow Theresa to find Bernard using his name",
                "by": [
                    {
                        "executing": "api:contacts.searchByName", 
                        "injecting": ["bernard"], 
                        "resulting": "contactsFound", 
                        "expecting": [{"var:contactsFound": "$anArray"}, {"var:contactsFound[0].loginEmail": "#blowe@hostwestworld.com"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Allow Theresa to find Bernard using his jid",
                "by": [
                    {
                        "executing": "api:contacts.searchByJid", 
                        "injecting": ["usr:robert.all.BernardUser.jid_im"], 
                        "resulting": "bernardContact", 
                        "expecting": [{"var:bernardContact": "$defined"}, {"var:bernardContact.loginEmail": "#blowe@hostwestworld.com"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "allow Theresa to find herself using her email",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:theresa.email"], 
                        "resulting": "seeSelf", 
                        "expecting": [{"var:seeSelf": "$defined"}, {"var:seeSelf.loginEmail": "#tcullen@guestwestworld.com"}],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "not allow Bernard to find Theresa using her email as Theresa's company is not visible by Bernard's company",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:theresa.email"], 
                        "resulting": "theresaEmailNotVisibleContact", 
                        "expecting": [{"var:theresaEmailNotVisibleContact": "$notDefined"}],
                        "using": ["bernard"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "not allow Bernard to find Theresa using her name as Theresa's company is not visible by Bernard's company",
                "by": [
                    {
                        "executing": "api:contacts.searchByName", 
                        "injecting": ["cullen"], 
                        "resulting": "theresaContactsFound", 
                        "expecting": [{"var:theresaContactsFound": "$anArray"}, {"var:theresaContactsFound.length": 0}],
                        "using": ["bernard"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Send an invite to Bernard from Theresa, wait for Bernard to receive and decline it and finally, remove the contact from Theresa",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:bernard.email"], 
                        "resulting": "bernardContact", 
                        "expecting": [{"var:bernardContact": "$defined"}],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.addToContactsList", 
                        "injecting": ["var:bernardContact"], 
                        "waiting": {
                            "forEvent": "api:contacts.RAINBOW_ONCONTACTINVITATIONRECEIVED",
                            "resulting": "invitation>id",
                            "using": ["bernard"]
                        },
                        "resulting": "", 
                        "expecting": [{"var:invitation.id": "$defined", "for": "bernard" }],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsReceived", 
                        "injecting": [""], 
                        "resulting": "inviteReceivedNumberAfterInvite", 
                        "expecting": [{"var:inviteReceivedNumberAfterInvite.length": 1}],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsSent", 
                        "injecting": [""], 
                        "resulting": "inviteSentNumberAfterInvite", 
                        "expecting": [{"var:inviteSentNumberAfterInvite.length": 1}],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.getInvitationById", 
                        "injecting": ["var:invitation.id"],
                        "resulting": "invitationReceived", 
                        "expecting": [],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.declineInvitation", 
                        "injecting": ["var:invitationReceived"],
                        "waiting": {
                            "forEvent": "api:contacts.RAINBOW_ONCONTACTINVITATIONRECEIVED",
                            "resulting": "",
                            "using": ["bernard"]
                        }, 
                        "resulting": "", 
                        "expecting": [],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsReceived", 
                        "injecting": [""], 
                        "resulting": "inviteReceivedNumberAfterDecline", 
                        "expecting": [{"var:inviteReceivedNumberAfterDecline.length": 0}],
                        "using": ["bernard"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsSent", 
                        "injecting": [""], 
                        "resulting": "inviteSentNumberAfterDecline", 
                        "expecting": [{"var:inviteSentNumberAfterDecline.length": 1}],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.removeFromContactsList", 
                        "injecting": ["var:bernardContact"], 
                        "resulting": "", 
                        "expecting": [],
                        "using": ["theresa"]
                    }
                ]
            }
        },
        {
            "it": {
                "should": "Send an invite to Maeve from Theresa, wait for Maeve to receive and accept it and finally, remove the contact from both Theresa and Maeve",
                "by": [
                    {
                        "executing": "api:contacts.searchByLogin", 
                        "injecting": ["usr:maeve.email"], 
                        "resulting": "MaeveContact", 
                        "expecting": [{"var:MaeveContact": "$defined"}],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.addToContactsList", 
                        "injecting": ["var:MaeveContact"], 
                        "waiting": {
                            "forEvent": "api:contacts.RAINBOW_ONCONTACTINVITATIONRECEIVED",
                            "resulting": "invitation>id",
                            "using": ["maeve"]
                        },
                        "resulting": "", 
                        "expecting": [{"var:invitation.id": "$defined", "for": "maeve" }],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsReceived", 
                        "injecting": [""], 
                        "resulting": "inviteNumberAfterInvite", 
                        "expecting": [{"var:inviteNumberAfterInvite.length": 1}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:contacts.getInvitationById", 
                        "injecting": ["var:invitation.id"],
                        "resulting": "invitationReceived", 
                        "expecting": [],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:contacts.acceptInvitation", 
                        "injecting": ["var:invitationReceived"], 
                        "resulting": "", 
                        "expecting": [],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:contacts.getInvitationsReceived", 
                        "injecting": [""], 
                        "resulting": "inviteNumberAfterAccept", 
                        "expecting": [{"var:inviteNumberAfterAccept.length": 0}],
                        "using": ["maeve"]
                    },
                    {
                        "executing": "api:contacts.removeFromContactsList", 
                        "injecting": ["var:MaeveContact"], 
                        "resulting": "", 
                        "expecting": [],
                        "using": ["theresa"]
                    },
                    {
                        "executing": "api:contacts.removeFromContactsList", 
                        "injecting": ["var:contact"], 
                        "resulting": "", 
                        "expecting": [],
                        "using": ["maeve"]
                    }
                ]
            }
        }
    ]
}